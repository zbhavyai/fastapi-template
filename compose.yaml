name: fastapitemplate

services:
  db:
    image: postgres:17.0
    container_name: fastapitemplate_db
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: appsecret
      POSTGRES_USER: appuser
      POSTGRES_DB: appdb
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - net

  backend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        REVISION: "${REVISION}"
    image: fastapitemplate_backend:${REVISION}
    container_name: fastapitemplate_backend
    restart: unless-stopped
    ports:
      - "8080:8080"
    healthcheck:
      test: [ "CMD", "curl", "--fail", "--silent", "--show-error", "http://localhost:8080/api/ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    networks:
      - net
    depends_on:
      db:
        condition: service_healthy

volumes:
  db_data:

networks:
  net:
    driver: bridge
